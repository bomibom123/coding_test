def solution(park, routes):
    answer = []
    l_routes = len(routes)
    l_row=len(park)
    l_col=len(park[0])
    co_S=[0,0]
    #동서남북
    dx=[0, 0, 1, -1]
    dy=[1,-1, 0, 0 ]
    direction ={'E':0, 'W':1, 'S':2, 'N':3}
    
    # S 위치 찾기
    for i in range(l_row):
        for j in range(l_col):
            if park[i][j] == 'S':
                co_S=[i,j]
                break
    
    for route in routes :
        dir, num =route.split()
        dir=direction[dir]
        new_x, new_y = co_S
        valid=True
        
        for _ in range(int(num)):
            new_x += dx[dir]
            new_y += dy[dir]
            
            if not (0<=new_x<l_row and 0<=new_y<l_col) or park[new_x][new_y]=='X':
                valid = False
                break
        if valid :
            co_S=new_x, new_y
    answer=co_S
    return answer
